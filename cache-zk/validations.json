{
  "version": "3.4",
  "log": [
    {
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:23"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:26"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:28"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:32"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:34"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:12",
        "version": {
          "withMetadata": "b47d3c838ab64eaddb806cbd018a14d580b398e57da1ccad37ff34bee32ed9bc",
          "withoutMetadata": "b47d3c838ab64eaddb806cbd018a14d580b398e57da1ccad37ff34bee32ed9bc",
          "linkedWithoutMetadata": "b47d3c838ab64eaddb806cbd018a14d580b398e57da1ccad37ff34bee32ed9bc"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "85177dbf94d3b5c4cf1847063357c07b8fb425e1d1c5d27b5b837ac901a7f55f",
          "withoutMetadata": "85177dbf94d3b5c4cf1847063357c07b8fb425e1d1c5d27b5b837ac901a7f55f",
          "linkedWithoutMetadata": "85177dbf94d3b5c4cf1847063357c07b8fb425e1d1c5d27b5b837ac901a7f55f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin/contracts/utils/math/SignedMath.sol:9",
        "version": {
          "withMetadata": "1c56663e7e9524556b4adbc9ae9424148a8f0f1763b358d1de52633826b249e9",
          "withoutMetadata": "1c56663e7e9524556b4adbc9ae9424148a8f0f1763b358d1de52633826b249e9",
          "linkedWithoutMetadata": "1c56663e7e9524556b4adbc9ae9424148a8f0f1763b358d1de52633826b249e9"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/example/zknft/NFT.sol:MyNFT": {
        "src": "contracts/example/zknft/NFT.sol:8",
        "version": {
          "withMetadata": "a88cf37efcb08e113bcf33616977b98ef566b2cf66d294af01fd20d1fdcb04ea",
          "withoutMetadata": "a88cf37efcb08e113bcf33616977b98ef566b2cf66d294af01fd20d1fdcb04ea",
          "linkedWithoutMetadata": "a88cf37efcb08e113bcf33616977b98ef566b2cf66d294af01fd20d1fdcb04ea"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(bytes32,bytes32,address,address)",
          "mintNFT(address,(bytes1,bytes32,bytes,uint256,uint256),((uint64,uint64,uint256,bytes32,bytes32,uint256,bytes32),address,uint256,bytes32,bytes32[],uint64))",
          "verifyPayment(((uint64,uint64,uint256,bytes32,bytes32,uint256,bytes32),address,uint256,bytes32,bytes32[],uint64))"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MyNFT",
            "src": "contracts/example/zknft/NFT.sol:32"
          },
          {
            "kind": "state-variable-immutable",
            "name": "selfChainId",
            "src": "contracts/example/zknft/NFT.sol:15"
          },
          {
            "kind": "state-variable-immutable",
            "name": "paymentChainID",
            "src": "contracts/example/zknft/NFT.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:23"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:26"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:28"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:32"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:34"
            },
            {
              "label": "confirmationReceipts",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_bytes32)",
              "contract": "MyNFT",
              "src": "contracts/example/zknft/NFT.sol:9"
            },
            {
              "label": "usedMessageid",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "MyNFT",
              "src": "contracts/example/zknft/NFT.sol:10"
            },
            {
              "label": "_tokenIds",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "MyNFT",
              "src": "contracts/example/zknft/NFT.sol:12"
            },
            {
              "label": "nexus",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(INexusProofManager)3641",
              "contract": "MyNFT",
              "src": "contracts/example/zknft/NFT.sol:13"
            },
            {
              "label": "storageProof",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(StorageProofVerifier)6591",
              "contract": "MyNFT",
              "src": "contracts/example/zknft/NFT.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(INexusProofManager)3641": {
              "label": "contract INexusProofManager",
              "numberOfBytes": "20"
            },
            "t_contract(StorageProofVerifier)6591": {
              "label": "contract StorageProofVerifier",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes32)": {
              "label": "mapping(uint256 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/example/zknft/NftPayment.sol:NFTPayment": {
        "src": "contracts/example/zknft/NftPayment.sol:7",
        "version": {
          "withMetadata": "32bfe3ff970dd1857fec88c524b3689a27831f9f568fe3b82d0eb20981f9f896",
          "withoutMetadata": "32bfe3ff970dd1857fec88c524b3689a27831f9f568fe3b82d0eb20981f9f896",
          "linkedWithoutMetadata": "32bfe3ff970dd1857fec88c524b3689a27831f9f568fe3b82d0eb20981f9f896"
        },
        "inherit": [
          "contracts/example/zknft/Payment.sol:Payment"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "paymentWithoutFallback(bytes1,uint256,uint256,address)",
          "paymentWithFallback(bytes1,uint256,uint256,address)",
          "claimPayment(uint256)",
          "verifyPayment(bytes32,bytes,bytes32,bytes)",
          "updatePrice(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "NFTPayment",
            "src": "contracts/example/zknft/NftPayment.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "CLAIM_TIME",
            "src": "contracts/example/zknft/NftPayment.sol:10"
          },
          {
            "kind": "state-variable-immutable",
            "name": "FIXED_PAYOUT_ADDRESS",
            "src": "contracts/example/zknft/NftPayment.sol:11"
          },
          {
            "kind": "state-variable-immutable",
            "name": "TARGET_CONTRACT_ADDRESS",
            "src": "contracts/example/zknft/NftPayment.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "claimCounter",
            "src": "contracts/example/zknft/NftPayment.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "idToHash",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_bytes32)",
              "contract": "Payment",
              "src": "contracts/example/zknft/Payment.sol:11"
            },
            {
              "label": "nexus",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(INexusProofManager)3641",
              "contract": "NFTPayment",
              "src": "contracts/example/zknft/NftPayment.sol:8"
            },
            {
              "label": "CLAIM_TIME",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "NFTPayment",
              "src": "contracts/example/zknft/NftPayment.sol:10"
            },
            {
              "label": "claimCounter",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "NFTPayment",
              "src": "contracts/example/zknft/NftPayment.sol:13"
            },
            {
              "label": "payoutPrice",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "NFTPayment",
              "src": "contracts/example/zknft/NftPayment.sol:19"
            },
            {
              "label": "pendingPayouts",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_struct(PendingPayment)3107_storage)dyn_storage",
              "contract": "NFTPayment",
              "src": "contracts/example/zknft/NftPayment.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(PendingPayment)3107_storage)dyn_storage": {
              "label": "struct NFTPayment.PendingPayment[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(INexusProofManager)3641": {
              "label": "contract INexusProofManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes32)": {
              "label": "mapping(uint256 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_struct(PendingPayment)3107_storage": {
              "label": "struct NFTPayment.PendingPayment",
              "members": [
                {
                  "label": "to",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/example/zknft/Payment.sol:Payment": {
        "src": "contracts/example/zknft/Payment.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "idToHash",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_bytes32)",
              "contract": "Payment",
              "src": "contracts/example/zknft/Payment.sol:11"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes32)": {
              "label": "mapping(uint256 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/interfaces/INexusProofManager.sol:INexusProofManager": {
        "src": "contracts/interfaces/INexusProofManager.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getStorageRoot(bytes32,uint256,address,bytes)",
          "getChainState(uint256,bytes32)",
          "verifyAccount(bytes32,bytes,address)",
          "verifyStorage(bytes32,bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/verification/zksync/Blask2s.sol:Blake2S": {
        "src": "contracts/verification/zksync/Blask2s.sol:13",
        "version": {
          "withMetadata": "961bdb466d92344d0a3e10ed93ae0cd178327eedee4f96f7dd3cb55a9aee429a",
          "withoutMetadata": "961bdb466d92344d0a3e10ed93ae0cd178327eedee4f96f7dd3cb55a9aee429a",
          "linkedWithoutMetadata": "961bdb466d92344d0a3e10ed93ae0cd178327eedee4f96f7dd3cb55a9aee429a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "toDigest(bytes)",
          "toDigest(bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/verification/zksync/SparseMerkleTree.sol:SparseMerkleTree": {
        "src": "contracts/verification/zksync/SparseMerkleTree.sol:26",
        "version": {
          "withMetadata": "5e2fd4ddc09ba2484ea14454e99b608477d25fe8119d82f27317f0a9220c673b",
          "withoutMetadata": "5e2fd4ddc09ba2484ea14454e99b608477d25fe8119d82f27317f0a9220c673b",
          "linkedWithoutMetadata": "5e2fd4ddc09ba2484ea14454e99b608477d25fe8119d82f27317f0a9220c673b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "getRootHash(bytes32[],(uint256,bytes32,uint64),address)",
          "hashBranch(bytes32,bytes32)",
          "hashLeaf(uint64,bytes32)",
          "bit(uint256,uint256)",
          "reverse(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SparseMerkleTree",
            "src": "contracts/verification/zksync/SparseMerkleTree.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "emptyTreeHashes_",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_bytes32)",
              "contract": "SparseMerkleTree",
              "src": "contracts/verification/zksync/SparseMerkleTree.sol:27"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes32)": {
              "label": "mapping(uint256 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/verification/zksync/StorageProof.sol:IZkSyncDiamond": {
        "src": "contracts/verification/zksync/StorageProof.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "storedBatchHash(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/verification/zksync/StorageProof.sol:StorageProofVerifier": {
        "src": "contracts/verification/zksync/StorageProof.sol:57",
        "version": {
          "withMetadata": "5cf15b08e6e9df586e14e830b60c63372fac4fad94c22c55442498f6f44f8364",
          "withoutMetadata": "5cf15b08e6e9df586e14e830b60c63372fac4fad94c22c55442498f6f44f8364",
          "linkedWithoutMetadata": "5cf15b08e6e9df586e14e830b60c63372fac4fad94c22c55442498f6f44f8364"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "verify(((uint64,uint64,uint256,bytes32,bytes32,uint256,bytes32),address,uint256,bytes32,bytes32[],uint64))"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "StorageProofVerifier",
            "src": "contracts/verification/zksync/StorageProof.sol:61"
          },
          {
            "kind": "state-variable-immutable",
            "name": "zksyncDiamondAddress",
            "src": "contracts/verification/zksync/StorageProof.sol:58"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "smt",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(SparseMerkleTree)6458",
              "contract": "StorageProofVerifier",
              "src": "contracts/verification/zksync/StorageProof.sol:59"
            }
          ],
          "types": {
            "t_contract(SparseMerkleTree)6458": {
              "label": "contract SparseMerkleTree",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts-hardhat-zksync-upgradable/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/interfaces/IERC1967.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/interfaces/draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/ERC1967/ERC1967Proxy.sol:15",
        "version": {
          "withMetadata": "980ab389f68e2f286d277bc59fe36b74213b6af4ba5a781f667237f1511792f4",
          "withoutMetadata": "980ab389f68e2f286d277bc59fe36b74213b6af4ba5a781f667237f1511792f4",
          "linkedWithoutMetadata": "980ab389f68e2f286d277bc59fe36b74213b6af4ba5a781f667237f1511792f4"
        },
        "inherit": [
          "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts-hardhat-zksync-upgradable/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/ERC1967/ERC1967Proxy.sol:22"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/ERC1967/ERC1967Upgrade.sol:18",
        "inherit": [
          "@openzeppelin/contracts-hardhat-zksync-upgradable/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/Proxy.sol:Proxy": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/beacon/BeaconProxy.sol:BeaconProxy": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/beacon/BeaconProxy.sol:18",
        "version": {
          "withMetadata": "6b5ab99439d267a5d51cc3821095686b120a73f8ae259d57a410113df5481389",
          "withoutMetadata": "6b5ab99439d267a5d51cc3821095686b120a73f8ae259d57a410113df5481389",
          "linkedWithoutMetadata": "6b5ab99439d267a5d51cc3821095686b120a73f8ae259d57a410113df5481389"
        },
        "inherit": [
          "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts-hardhat-zksync-upgradable/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/beacon/BeaconProxy.sol:30"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/beacon/UpgradeableBeacon.sol:UpgradeableBeacon": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/beacon/UpgradeableBeacon.sol:16",
        "version": {
          "withMetadata": "2e227520bf6879ae9207cd22924372cfd94913e9d359b53c484e6cf98ae3a01f",
          "withoutMetadata": "2e227520bf6879ae9207cd22924372cfd94913e9d359b53c484e6cf98ae3a01f",
          "linkedWithoutMetadata": "2e227520bf6879ae9207cd22924372cfd94913e9d359b53c484e6cf98ae3a01f"
        },
        "inherit": [
          "@openzeppelin/contracts-hardhat-zksync-upgradable/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Context.sol:Context",
          "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/beacon/IBeacon.sol:IBeacon"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "implementation()",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/beacon/UpgradeableBeacon.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/access/Ownable.sol:21"
            },
            {
              "label": "_implementation",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UpgradeableBeacon",
              "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/beacon/UpgradeableBeacon.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/transparent/ProxyAdmin.sol:ProxyAdmin": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/transparent/ProxyAdmin.sol:13",
        "version": {
          "withMetadata": "b626b1c083a0ac015daf8e173ccb45d0feb92d37017038c7ae101fa57d232bba",
          "withoutMetadata": "b626b1c083a0ac015daf8e173ccb45d0feb92d37017038c7ae101fa57d232bba",
          "linkedWithoutMetadata": "b626b1c083a0ac015daf8e173ccb45d0feb92d37017038c7ae101fa57d232bba"
        },
        "inherit": [
          "@openzeppelin/contracts-hardhat-zksync-upgradable/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/transparent/TransparentUpgradeableProxy.sol:ITransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/transparent/TransparentUpgradeableProxy.sol:14",
        "inherit": [
          "@openzeppelin/contracts-hardhat-zksync-upgradable/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [],
        "methods": [
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/transparent/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/transparent/TransparentUpgradeableProxy.sol:58",
        "version": {
          "withMetadata": "c8ed1853b5528313ad491c648063e2e3885918e0a2459174ccbcf631466b0509",
          "withoutMetadata": "c8ed1853b5528313ad491c648063e2e3885918e0a2459174ccbcf631466b0509",
          "linkedWithoutMetadata": "c8ed1853b5528313ad491c648063e2e3885918e0a2459174ccbcf631466b0509"
        },
        "inherit": [
          "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy",
          "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts-hardhat-zksync-upgradable/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/transparent/TransparentUpgradeableProxy.sol:63"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:9",
        "version": {
          "withMetadata": "4edc65ec03dc5a79102fbd0b08bef0ae4dff0fc588ce297c05f77a055d5e9be8",
          "withoutMetadata": "4edc65ec03dc5a79102fbd0b08bef0ae4dff0fc588ce297c05f77a055d5e9be8",
          "linkedWithoutMetadata": "4edc65ec03dc5a79102fbd0b08bef0ae4dff0fc588ce297c05f77a055d5e9be8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/StorageSlot.sol:34",
        "version": {
          "withMetadata": "897975223b62b6da485c1da9fbb25f81c2c1491acf31d521380af64694d2a859",
          "withoutMetadata": "897975223b62b6da485c1da9fbb25f81c2c1491acf31d521380af64694d2a859",
          "linkedWithoutMetadata": "897975223b62b6da485c1da9fbb25f81c2c1491acf31d521380af64694d2a859"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:50",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)1642_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)1642_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_uint64": {
              "label": "uint64"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)1642_storage)",
                "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/access/extensions/AccessControlDefaultAdminRulesUpgradeable.sol:AccessControlDefaultAdminRulesUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/extensions/AccessControlDefaultAdminRulesUpgradeable.sol:41",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/interfaces/IERC5313.sol:IERC5313",
          "@openzeppelin/contracts/access/extensions/IAccessControlDefaultAdminRules.sol:IAccessControlDefaultAdminRules",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "owner()",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)",
          "defaultAdmin()",
          "pendingDefaultAdmin()",
          "defaultAdminDelay()",
          "pendingDefaultAdminDelay()",
          "defaultAdminDelayIncreaseWait()",
          "beginDefaultAdminTransfer(address)",
          "cancelDefaultAdminTransfer()",
          "acceptDefaultAdminTransfer()",
          "changeDefaultAdminDelay(uint48)",
          "rollbackDefaultAdminDelay()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_uint48": {
              "label": "uint48"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)1642_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)1642_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_uint64": {
              "label": "uint64"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.AccessControlDefaultAdminRules": [
              {
                "contract": "AccessControlDefaultAdminRulesUpgradeable",
                "label": "_pendingDefaultAdmin",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/extensions/AccessControlDefaultAdminRulesUpgradeable.sol:45"
              },
              {
                "contract": "AccessControlDefaultAdminRulesUpgradeable",
                "label": "_pendingDefaultAdminSchedule",
                "type": "t_uint48",
                "src": "@openzeppelin/contracts-upgradeable/access/extensions/AccessControlDefaultAdminRulesUpgradeable.sol:46"
              },
              {
                "contract": "AccessControlDefaultAdminRulesUpgradeable",
                "label": "_currentDelay",
                "type": "t_uint48",
                "src": "@openzeppelin/contracts-upgradeable/access/extensions/AccessControlDefaultAdminRulesUpgradeable.sol:48"
              },
              {
                "contract": "AccessControlDefaultAdminRulesUpgradeable",
                "label": "_currentDefaultAdmin",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/extensions/AccessControlDefaultAdminRulesUpgradeable.sol:49"
              },
              {
                "contract": "AccessControlDefaultAdminRulesUpgradeable",
                "label": "_pendingDelay",
                "type": "t_uint48",
                "src": "@openzeppelin/contracts-upgradeable/access/extensions/AccessControlDefaultAdminRulesUpgradeable.sol:52"
              },
              {
                "contract": "AccessControlDefaultAdminRulesUpgradeable",
                "label": "_pendingDelaySchedule",
                "type": "t_uint48",
                "src": "@openzeppelin/contracts-upgradeable/access/extensions/AccessControlDefaultAdminRulesUpgradeable.sol:53"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)1642_storage)",
                "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_uint64": {
              "label": "uint64"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_uint64": {
              "label": "uint64"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_uint64": {
              "label": "uint64"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint64": {
              "label": "uint64"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_uint64": {
              "label": "uint64"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/extensions/IAccessControlDefaultAdminRules.sol:IAccessControlDefaultAdminRules": {
        "src": "@openzeppelin/contracts/access/extensions/IAccessControlDefaultAdminRules.sol:11",
        "inherit": [
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl"
        ],
        "libraries": [],
        "methods": [
          "defaultAdmin()",
          "pendingDefaultAdmin()",
          "defaultAdminDelay()",
          "pendingDefaultAdminDelay()",
          "beginDefaultAdminTransfer(address)",
          "cancelDefaultAdminTransfer()",
          "acceptDefaultAdminTransfer()",
          "changeDefaultAdminDelay(uint48)",
          "rollbackDefaultAdminDelay()",
          "defaultAdminDelayIncreaseWait()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/IERC5313.sol:IERC5313": {
        "src": "@openzeppelin/contracts/interfaces/IERC5313.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:42",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "727a87b2b1a7ddd0a6b01c8892a48b75eba9aca87f12dbb2960d1057ba7ec76b",
          "withoutMetadata": "727a87b2b1a7ddd0a6b01c8892a48b75eba9aca87f12dbb2960d1057ba7ec76b",
          "linkedWithoutMetadata": "727a87b2b1a7ddd0a6b01c8892a48b75eba9aca87f12dbb2960d1057ba7ec76b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:23"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:26"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:28"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:32"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:34"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "9fa049bf896f2957a97a817b6bfd25dcfa95e3ca47a2a65f26b957fe79671922",
          "withoutMetadata": "9fa049bf896f2957a97a817b6bfd25dcfa95e3ca47a2a65f26b957fe79671922",
          "linkedWithoutMetadata": "9fa049bf896f2957a97a817b6bfd25dcfa95e3ca47a2a65f26b957fe79671922"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:12",
        "version": {
          "withMetadata": "b47d3c838ab64eaddb806cbd018a14d580b398e57da1ccad37ff34bee32ed9bc",
          "withoutMetadata": "b47d3c838ab64eaddb806cbd018a14d580b398e57da1ccad37ff34bee32ed9bc",
          "linkedWithoutMetadata": "b47d3c838ab64eaddb806cbd018a14d580b398e57da1ccad37ff34bee32ed9bc"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "85177dbf94d3b5c4cf1847063357c07b8fb425e1d1c5d27b5b837ac901a7f55f",
          "withoutMetadata": "85177dbf94d3b5c4cf1847063357c07b8fb425e1d1c5d27b5b837ac901a7f55f",
          "linkedWithoutMetadata": "85177dbf94d3b5c4cf1847063357c07b8fb425e1d1c5d27b5b837ac901a7f55f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast": {
        "src": "@openzeppelin/contracts/utils/math/SafeCast.sol:19",
        "version": {
          "withMetadata": "b86af76e814494772ea76ca9d2034f5f2bd693cbf1523291eef25843b8fb3030",
          "withoutMetadata": "b86af76e814494772ea76ca9d2034f5f2bd693cbf1523291eef25843b8fb3030",
          "linkedWithoutMetadata": "b86af76e814494772ea76ca9d2034f5f2bd693cbf1523291eef25843b8fb3030"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin/contracts/utils/math/SignedMath.sol:9",
        "version": {
          "withMetadata": "1c56663e7e9524556b4adbc9ae9424148a8f0f1763b358d1de52633826b249e9",
          "withoutMetadata": "1c56663e7e9524556b4adbc9ae9424148a8f0f1763b358d1de52633826b249e9",
          "linkedWithoutMetadata": "1c56663e7e9524556b4adbc9ae9424148a8f0f1763b358d1de52633826b249e9"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/NexusProofManager.sol:NexusProofManager": {
        "src": "contracts/NexusProofManager.sol:6",
        "version": {
          "withMetadata": "417b2e2200f6d447848e7d5487008306fc51b465b1f50241c128262b9836e2a6",
          "withoutMetadata": "417b2e2200f6d447848e7d5487008306fc51b465b1f50241c128262b9836e2a6",
          "linkedWithoutMetadata": "417b2e2200f6d447848e7d5487008306fc51b465b1f50241c128262b9836e2a6"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(bytes32)",
          "updateNexusBlock(uint256,(bytes32,bytes32))",
          "updateChainState(uint256,bytes32[],bytes32,(bytes32,bytes32,bytes32,uint128,uint128))",
          "verifyRollupState(bytes32,((bytes32,bytes32),bytes32[]),(bytes32,bytes32))",
          "getChainState(uint256,bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "latestNexusBlockNumber",
            "src": "contracts/NexusProofManager.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "latestNexusBlockNumber",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "NexusProofManager",
              "src": "contracts/NexusProofManager.sol:7"
            },
            {
              "label": "nexusBlock",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(NexusBlock)9416_storage)",
              "contract": "NexusProofManager",
              "src": "contracts/NexusProofManager.sol:14"
            },
            {
              "label": "nexusAppIDToLatestBlockNumber",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "NexusProofManager",
              "src": "contracts/NexusProofManager.sol:15"
            },
            {
              "label": "nexusAppIDToState",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes32))",
              "contract": "NexusProofManager",
              "src": "contracts/NexusProofManager.sol:16"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes32))": {
              "label": "mapping(bytes32 => mapping(uint256 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes32)": {
              "label": "mapping(uint256 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(NexusBlock)9416_storage)": {
              "label": "mapping(uint256 => struct NexusProofManager.NexusBlock)",
              "numberOfBytes": "32"
            },
            "t_struct(NexusBlock)9416_storage": {
              "label": "struct NexusProofManager.NexusBlock",
              "members": [
                {
                  "label": "stateRoot",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "blockHash",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/example/bridge/NexusBridge.sol:NexusBridge": {
        "src": "contracts/example/bridge/NexusBridge.sol:21",
        "version": {
          "withMetadata": "fc6fc15261d56093e3950bd677ea07aceb672d8a51c0834b2263c303093cc2f2",
          "withoutMetadata": "fc6fc15261d56093e3950bd677ea07aceb672d8a51c0834b2263c303093cc2f2",
          "linkedWithoutMetadata": "fc6fc15261d56093e3950bd677ea07aceb672d8a51c0834b2263c303093cc2f2"
        },
        "inherit": [
          "contracts/example/bridge/interfaces/INexusBridge.sol:INexusBridge",
          "@openzeppelin/contracts-upgradeable/access/extensions/AccessControlDefaultAdminRulesUpgradeable.sol:AccessControlDefaultAdminRulesUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/interfaces/IERC5313.sol:IERC5313",
          "@openzeppelin/contracts/access/extensions/IAccessControlDefaultAdminRules.sol:IAccessControlDefaultAdminRules",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(uint256,address,address,address,address,address,bytes32)",
          "setPaused(bool)",
          "updateTokens(bytes32[],address[])",
          "updateNexusTokens(bytes32[],address[])",
          "updateFeePerByte(uint256)",
          "updateFeeRecipient(address)",
          "withdrawFees()",
          "receiveMessage((bytes1,bytes32,bytes32,bytes,uint64,bytes,bytes32),bytes)",
          "receiveETH((bytes1,bytes32,bytes32,bytes,uint64,bytes,bytes32),bytes)",
          "receiveERC20((bytes1,bytes32,bytes32,bytes,uint64,bytes,bytes32),bytes)",
          "sendMessage(bytes32,bytes)",
          "sendETH(bytes32)",
          "sendERC20(bytes32,bytes32,uint256)",
          "getFee(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "isSent",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_bytes32)",
              "contract": "NexusBridge",
              "src": "contracts/example/bridge/NexusBridge.sol:32"
            },
            {
              "label": "isBridged",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "NexusBridge",
              "src": "contracts/example/bridge/NexusBridge.sol:34"
            },
            {
              "label": "tokens",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "NexusBridge",
              "src": "contracts/example/bridge/NexusBridge.sol:36"
            },
            {
              "label": "nexusTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "NexusBridge",
              "src": "contracts/example/bridge/NexusBridge.sol:38"
            },
            {
              "label": "avail",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IAvail)10737",
              "contract": "NexusBridge",
              "src": "contracts/example/bridge/NexusBridge.sol:40"
            },
            {
              "label": "nexus",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(INexusProofManager)11876",
              "contract": "NexusBridge",
              "src": "contracts/example/bridge/NexusBridge.sol:41"
            },
            {
              "label": "feeRecipient",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "NexusBridge",
              "src": "contracts/example/bridge/NexusBridge.sol:42"
            },
            {
              "label": "fees",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "NexusBridge",
              "src": "contracts/example/bridge/NexusBridge.sol:43"
            },
            {
              "label": "feePerByte",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "NexusBridge",
              "src": "contracts/example/bridge/NexusBridge.sol:44"
            },
            {
              "label": "messageId",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "NexusBridge",
              "src": "contracts/example/bridge/NexusBridge.sol:45"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "10",
              "type": "t_bytes32",
              "contract": "NexusBridge",
              "src": "contracts/example/bridge/NexusBridge.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IAvail)10737": {
              "label": "contract IAvail",
              "numberOfBytes": "20"
            },
            "t_contract(INexusProofManager)11876": {
              "label": "contract INexusProofManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes32)": {
              "label": "mapping(uint256 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint48": {
              "label": "uint48"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)1642_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
            },
            "t_struct(RoleData)1642_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_uint64": {
              "label": "uint64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.AccessControlDefaultAdminRules": [
              {
                "contract": "AccessControlDefaultAdminRulesUpgradeable",
                "label": "_pendingDefaultAdmin",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/extensions/AccessControlDefaultAdminRulesUpgradeable.sol:45"
              },
              {
                "contract": "AccessControlDefaultAdminRulesUpgradeable",
                "label": "_pendingDefaultAdminSchedule",
                "type": "t_uint48",
                "src": "@openzeppelin/contracts-upgradeable/access/extensions/AccessControlDefaultAdminRulesUpgradeable.sol:46"
              },
              {
                "contract": "AccessControlDefaultAdminRulesUpgradeable",
                "label": "_currentDelay",
                "type": "t_uint48",
                "src": "@openzeppelin/contracts-upgradeable/access/extensions/AccessControlDefaultAdminRulesUpgradeable.sol:48"
              },
              {
                "contract": "AccessControlDefaultAdminRulesUpgradeable",
                "label": "_currentDefaultAdmin",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/extensions/AccessControlDefaultAdminRulesUpgradeable.sol:49"
              },
              {
                "contract": "AccessControlDefaultAdminRulesUpgradeable",
                "label": "_pendingDelay",
                "type": "t_uint48",
                "src": "@openzeppelin/contracts-upgradeable/access/extensions/AccessControlDefaultAdminRulesUpgradeable.sol:52"
              },
              {
                "contract": "AccessControlDefaultAdminRulesUpgradeable",
                "label": "_pendingDelaySchedule",
                "type": "t_uint48",
                "src": "@openzeppelin/contracts-upgradeable/access/extensions/AccessControlDefaultAdminRulesUpgradeable.sol:53"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)1642_storage)",
                "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21"
              }
            ],
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "contracts/example/bridge/interfaces/IAvail.sol:IAvail": {
        "src": "contracts/example/bridge/interfaces/IAvail.sol:6",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/example/bridge/interfaces/IMessageReceiver.sol:IMessageReceiver": {
        "src": "contracts/example/bridge/interfaces/IMessageReceiver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onAvailMessage(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/example/bridge/interfaces/INexusBridge.sol:INexusBridge": {
        "src": "contracts/example/bridge/interfaces/INexusBridge.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setPaused(bool)",
          "updateTokens(bytes32[],address[])",
          "updateFeePerByte(uint256)",
          "updateFeeRecipient(address)",
          "withdrawFees()",
          "receiveMessage((bytes1,bytes32,bytes32,bytes,uint64,bytes,bytes32),bytes)",
          "receiveETH((bytes1,bytes32,bytes32,bytes,uint64,bytes,bytes32),bytes)",
          "receiveERC20((bytes1,bytes32,bytes32,bytes,uint64,bytes,bytes32),bytes)",
          "sendMessage(bytes32,bytes)",
          "sendETH(bytes32)",
          "sendERC20(bytes32,bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/example/bridge/interfaces/IVectorx.sol:IVectorx": {
        "src": "contracts/example/bridge/interfaces/IVectorx.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "dataRootCommitments(bytes32)",
          "rangeStartBlocks(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/example/bridge/lib/Merkle.sol:Merkle": {
        "src": "contracts/example/bridge/lib/Merkle.sol:11",
        "version": {
          "withMetadata": "e41165f83a5b6336f16cf842856ee4df3fe65118e396837da8c24a4d562af4d0",
          "withoutMetadata": "e41165f83a5b6336f16cf842856ee4df3fe65118e396837da8c24a4d562af4d0",
          "linkedWithoutMetadata": "e41165f83a5b6336f16cf842856ee4df3fe65118e396837da8c24a4d562af4d0"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/example/mock/ERC20.sol:ERC20Token": {
        "src": "contracts/example/mock/ERC20.sol:6",
        "version": {
          "withMetadata": "ae44231a9fc7e3e19f55df111357c68fd8ec14d716612a81ade5bc4f4ace39ec",
          "withoutMetadata": "ae44231a9fc7e3e19f55df111357c68fd8ec14d716612a81ade5bc4f4ace39ec",
          "linkedWithoutMetadata": "ae44231a9fc7e3e19f55df111357c68fd8ec14d716612a81ade5bc4f4ace39ec"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Token",
            "src": "contracts/example/mock/ERC20.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/example/mock/ERC721.sol:ERC721Token": {
        "src": "contracts/example/mock/ERC721.sol:6",
        "version": {
          "withMetadata": "71ccfa31b884a18499387e5c100dc31d7ed1dd7a96c6fefd88dcbefe1d1b8adb",
          "withoutMetadata": "71ccfa31b884a18499387e5c100dc31d7ed1dd7a96c6fefd88dcbefe1d1b8adb",
          "linkedWithoutMetadata": "71ccfa31b884a18499387e5c100dc31d7ed1dd7a96c6fefd88dcbefe1d1b8adb"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721Token",
            "src": "contracts/example/mock/ERC721.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:23"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:26"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:28"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:32"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:34"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/example/zknft/NFT.sol:MyNFT": {
        "src": "contracts/example/zknft/NFT.sol:7",
        "version": {
          "withMetadata": "7e9dc4e021682c52c55fb7ccdebe1e49d5401a260cb270f8370f4b360ac08204",
          "withoutMetadata": "7e9dc4e021682c52c55fb7ccdebe1e49d5401a260cb270f8370f4b360ac08204",
          "linkedWithoutMetadata": "7e9dc4e021682c52c55fb7ccdebe1e49d5401a260cb270f8370f4b360ac08204"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(bytes32,bytes32,address,address)",
          "mintNFT(address,(bytes1,bytes32,bytes,uint256,uint256),bytes32,bytes,bytes32,bytes)",
          "verifyPayment(bytes32,bytes32,bytes,bytes32,bytes)",
          "updateTargetContract(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MyNFT",
            "src": "contracts/example/zknft/NFT.sol:33"
          },
          {
            "kind": "state-variable-immutable",
            "name": "selfChainId",
            "src": "contracts/example/zknft/NFT.sol:13"
          },
          {
            "kind": "state-variable-immutable",
            "name": "paymentChainID",
            "src": "contracts/example/zknft/NFT.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:23"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:26"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:28"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:32"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:34"
            },
            {
              "label": "confirmationReceipts",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_bytes32)",
              "contract": "MyNFT",
              "src": "contracts/example/zknft/NFT.sol:8"
            },
            {
              "label": "usedMessageid",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "MyNFT",
              "src": "contracts/example/zknft/NFT.sol:9"
            },
            {
              "label": "_tokenIds",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "MyNFT",
              "src": "contracts/example/zknft/NFT.sol:11"
            },
            {
              "label": "nexus",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(INexusProofManager)11876",
              "contract": "MyNFT",
              "src": "contracts/example/zknft/NFT.sol:12"
            },
            {
              "label": "TARGET_CONTRACT_ADDRESS",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "MyNFT",
              "src": "contracts/example/zknft/NFT.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(INexusProofManager)11876": {
              "label": "contract INexusProofManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes32)": {
              "label": "mapping(uint256 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/example/zknft/NftPayment.sol:NFTPayment": {
        "src": "contracts/example/zknft/NftPayment.sol:7",
        "version": {
          "withMetadata": "60c46fbe6aae714eea3a1b5d561cf16299610f1a74ce04d82f78371064049b00",
          "withoutMetadata": "60c46fbe6aae714eea3a1b5d561cf16299610f1a74ce04d82f78371064049b00",
          "linkedWithoutMetadata": "60c46fbe6aae714eea3a1b5d561cf16299610f1a74ce04d82f78371064049b00"
        },
        "inherit": [
          "contracts/example/zknft/Payment.sol:Payment"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "paymentWithoutFallback(bytes1,uint256,uint256,address)",
          "paymentWithFallback(bytes1,uint256,uint256,address)",
          "claimPayment(uint256)",
          "verifyPayment(bytes32,bytes,bytes32,bytes)",
          "updatePrice(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "NFTPayment",
            "src": "contracts/example/zknft/NftPayment.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "CLAIM_TIME",
            "src": "contracts/example/zknft/NftPayment.sol:10"
          },
          {
            "kind": "state-variable-immutable",
            "name": "FIXED_PAYOUT_ADDRESS",
            "src": "contracts/example/zknft/NftPayment.sol:11"
          },
          {
            "kind": "state-variable-immutable",
            "name": "TARGET_CONTRACT_ADDRESS",
            "src": "contracts/example/zknft/NftPayment.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "claimCounter",
            "src": "contracts/example/zknft/NftPayment.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "idToHash",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_bytes32)",
              "contract": "Payment",
              "src": "contracts/example/zknft/Payment.sol:11"
            },
            {
              "label": "nexus",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(INexusProofManager)11876",
              "contract": "NFTPayment",
              "src": "contracts/example/zknft/NftPayment.sol:8"
            },
            {
              "label": "CLAIM_TIME",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "NFTPayment",
              "src": "contracts/example/zknft/NftPayment.sol:10"
            },
            {
              "label": "claimCounter",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "NFTPayment",
              "src": "contracts/example/zknft/NftPayment.sol:13"
            },
            {
              "label": "payoutPrice",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "NFTPayment",
              "src": "contracts/example/zknft/NftPayment.sol:19"
            },
            {
              "label": "pendingPayouts",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_struct(PendingPayment)11342_storage)dyn_storage",
              "contract": "NFTPayment",
              "src": "contracts/example/zknft/NftPayment.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(PendingPayment)11342_storage)dyn_storage": {
              "label": "struct NFTPayment.PendingPayment[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(INexusProofManager)11876": {
              "label": "contract INexusProofManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes32)": {
              "label": "mapping(uint256 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_struct(PendingPayment)11342_storage": {
              "label": "struct NFTPayment.PendingPayment",
              "members": [
                {
                  "label": "to",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/example/zknft/Payment.sol:Payment": {
        "src": "contracts/example/zknft/Payment.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "idToHash",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_bytes32)",
              "contract": "Payment",
              "src": "contracts/example/zknft/Payment.sol:11"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes32)": {
              "label": "mapping(uint256 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/interfaces/INexusProofManager.sol:INexusProofManager": {
        "src": "contracts/interfaces/INexusProofManager.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getStorageRoot(bytes32,uint256,address,bytes)",
          "getChainState(uint256,bytes32)",
          "verifyAccount(bytes32,bytes,address)",
          "verifyStorage(bytes32,bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/lib/JellyfishMerkleTreeVerifier.sol:JellyfishMerkleTreeVerifier": {
        "src": "contracts/lib/JellyfishMerkleTreeVerifier.sol:5",
        "version": {
          "withMetadata": "a9daad77591f6e25e7cf842041f94e00290eba1e6fbbe817f76491a258d0f6ed",
          "withoutMetadata": "a9daad77591f6e25e7cf842041f94e00290eba1e6fbbe817f76491a258d0f6ed",
          "linkedWithoutMetadata": "a9daad77591f6e25e7cf842041f94e00290eba1e6fbbe817f76491a258d0f6ed"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "verifyProof(bytes32,(bytes32,bytes32),((bytes32,bytes32),bytes32[]))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/lib/external/rlp/Lib_RLPReader.sol:Lib_RLPReader": {
        "src": "contracts/lib/external/rlp/Lib_RLPReader.sol:8",
        "version": {
          "withMetadata": "0e6659cd60113a0f5ae320c0a5ba4d0cf290d6a67f734ab9ba2bc515ff192e2a",
          "withoutMetadata": "0e6659cd60113a0f5ae320c0a5ba4d0cf290d6a67f734ab9ba2bc515ff192e2a",
          "linkedWithoutMetadata": "0e6659cd60113a0f5ae320c0a5ba4d0cf290d6a67f734ab9ba2bc515ff192e2a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/lib/external/rlp/Lib_RLPWriter.sol:Lib_RLPWriter": {
        "src": "contracts/lib/external/rlp/Lib_RLPWriter.sol:12",
        "version": {
          "withMetadata": "23e4ac2d49d14e0a3c4e7c4ad3c291eb71254ebe36aac9a8e89a3b94d56c707a",
          "withoutMetadata": "23e4ac2d49d14e0a3c4e7c4ad3c291eb71254ebe36aac9a8e89a3b94d56c707a",
          "linkedWithoutMetadata": "23e4ac2d49d14e0a3c4e7c4ad3c291eb71254ebe36aac9a8e89a3b94d56c707a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/lib/external/trie/Lib_MerkleTrie.sol:Lib_MerkleTrie": {
        "src": "contracts/lib/external/trie/Lib_MerkleTrie.sol:12",
        "version": {
          "withMetadata": "e31e953a6baa3213ff3bb34cf351734495f958f5ea643ffa428765358415d69d",
          "withoutMetadata": "e31e953a6baa3213ff3bb34cf351734495f958f5ea643ffa428765358415d69d",
          "linkedWithoutMetadata": "e31e953a6baa3213ff3bb34cf351734495f958f5ea643ffa428765358415d69d"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/lib/external/trie/Lib_SecureMerkleTrie.sol:Lib_SecureMerkleTrie": {
        "src": "contracts/lib/external/trie/Lib_SecureMerkleTrie.sol:11",
        "version": {
          "withMetadata": "b5a9c5217a76379984aeaf052d358d4c0bbe30790e58b0ff0639dd769a502f7f",
          "withoutMetadata": "b5a9c5217a76379984aeaf052d358d4c0bbe30790e58b0ff0639dd769a502f7f",
          "linkedWithoutMetadata": "b5a9c5217a76379984aeaf052d358d4c0bbe30790e58b0ff0639dd769a502f7f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/lib/external/utils/Bytes.sol:Bytes": {
        "src": "contracts/lib/external/utils/Bytes.sol:6",
        "version": {
          "withMetadata": "7e54e22603dc6200b485b3bd197930d6e88758aedffca0a7c284b477a948467e",
          "withoutMetadata": "7e54e22603dc6200b485b3bd197930d6e88758aedffca0a7c284b477a948467e",
          "linkedWithoutMetadata": "7e54e22603dc6200b485b3bd197930d6e88758aedffca0a7c284b477a948467e"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/lib/external/utils/Lib_BytesUtils.sol:Lib_BytesUtils": {
        "src": "contracts/lib/external/utils/Lib_BytesUtils.sol:7",
        "version": {
          "withMetadata": "876c765ffbe6e26cc65966368eedf2e3782dfb89587fa52a74c8be7a9be95580",
          "withoutMetadata": "876c765ffbe6e26cc65966368eedf2e3782dfb89587fa52a74c8be7a9be95580",
          "linkedWithoutMetadata": "876c765ffbe6e26cc65966368eedf2e3782dfb89587fa52a74c8be7a9be95580"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/verification/ethereum/StorageProof.sol:StorageProof": {
        "src": "contracts/verification/ethereum/StorageProof.sol:8",
        "version": {
          "withMetadata": "523aa309481a26ee5dcc5f24ca0854691fd3992928a169010506acedeab0673f",
          "withoutMetadata": "523aa309481a26ee5dcc5f24ca0854691fd3992928a169010506acedeab0673f",
          "linkedWithoutMetadata": "523aa309481a26ee5dcc5f24ca0854691fd3992928a169010506acedeab0673f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(bytes32)",
          "verifyAccount(bytes32,bytes,address)",
          "verifyStorage(bytes32,bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "StorageProof",
            "src": "contracts/verification/ethereum/StorageProof.sol:26"
          },
          {
            "kind": "state-variable-immutable",
            "name": "selfChainId",
            "src": "contracts/verification/ethereum/StorageProof.sol:13"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/verification/ethereum/Verifier.sol:EthereumVerifier": {
        "src": "contracts/verification/ethereum/Verifier.sol:6",
        "version": {
          "withMetadata": "2755ba4f29f820f6a85e7c1acb231ef55bd420501befa349ecbc74b978ef7b43",
          "withoutMetadata": "2755ba4f29f820f6a85e7c1acb231ef55bd420501befa349ecbc74b978ef7b43",
          "linkedWithoutMetadata": "2755ba4f29f820f6a85e7c1acb231ef55bd420501befa349ecbc74b978ef7b43"
        },
        "inherit": [
          "contracts/verification/ethereum/StorageProof.sol:StorageProof"
        ],
        "libraries": [],
        "methods": [
          "(bytes32,address)",
          "getStorageRoot(bytes32,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EthereumVerifier",
            "src": "contracts/verification/ethereum/Verifier.sol:9"
          },
          {
            "kind": "state-variable-immutable",
            "name": "nexusStateManager",
            "src": "contracts/verification/ethereum/Verifier.sol:7"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/verification/zksync/Blask2s.sol:Blake2S": {
        "src": "contracts/verification/zksync/Blask2s.sol:13",
        "version": {
          "withMetadata": "961bdb466d92344d0a3e10ed93ae0cd178327eedee4f96f7dd3cb55a9aee429a",
          "withoutMetadata": "961bdb466d92344d0a3e10ed93ae0cd178327eedee4f96f7dd3cb55a9aee429a",
          "linkedWithoutMetadata": "961bdb466d92344d0a3e10ed93ae0cd178327eedee4f96f7dd3cb55a9aee429a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "toDigest(bytes)",
          "toDigest(bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/verification/zksync/SparseMerkleTree.sol:SparseMerkleTree": {
        "src": "contracts/verification/zksync/SparseMerkleTree.sol:26",
        "version": {
          "withMetadata": "5e2fd4ddc09ba2484ea14454e99b608477d25fe8119d82f27317f0a9220c673b",
          "withoutMetadata": "5e2fd4ddc09ba2484ea14454e99b608477d25fe8119d82f27317f0a9220c673b",
          "linkedWithoutMetadata": "5e2fd4ddc09ba2484ea14454e99b608477d25fe8119d82f27317f0a9220c673b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "getRootHash(bytes32[],(uint256,bytes32,uint64),address)",
          "hashBranch(bytes32,bytes32)",
          "hashLeaf(uint64,bytes32)",
          "bit(uint256,uint256)",
          "reverse(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SparseMerkleTree",
            "src": "contracts/verification/zksync/SparseMerkleTree.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "emptyTreeHashes_",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_bytes32)",
              "contract": "SparseMerkleTree",
              "src": "contracts/verification/zksync/SparseMerkleTree.sol:27"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes32)": {
              "label": "mapping(uint256 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/verification/zksync/StorageProof.sol:IZkSyncDiamond": {
        "src": "contracts/verification/zksync/StorageProof.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "storedBatchHash(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/verification/zksync/StorageProof.sol:StorageProofVerifier": {
        "src": "contracts/verification/zksync/StorageProof.sol:57",
        "version": {
          "withMetadata": "5cf15b08e6e9df586e14e830b60c63372fac4fad94c22c55442498f6f44f8364",
          "withoutMetadata": "5cf15b08e6e9df586e14e830b60c63372fac4fad94c22c55442498f6f44f8364",
          "linkedWithoutMetadata": "5cf15b08e6e9df586e14e830b60c63372fac4fad94c22c55442498f6f44f8364"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "verify(((uint64,uint64,uint256,bytes32,bytes32,uint256,bytes32),address,uint256,bytes32,bytes32[],uint64))"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "StorageProofVerifier",
            "src": "contracts/verification/zksync/StorageProof.sol:61"
          },
          {
            "kind": "state-variable-immutable",
            "name": "zksyncDiamondAddress",
            "src": "contracts/verification/zksync/StorageProof.sol:58"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "smt",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(SparseMerkleTree)19048",
              "contract": "StorageProofVerifier",
              "src": "contracts/verification/zksync/StorageProof.sol:59"
            }
          ],
          "types": {
            "t_contract(SparseMerkleTree)19048": {
              "label": "contract SparseMerkleTree",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/verification/zksync/ZKSyncDiamond.sol:ZKSyncDiamond": {
        "src": "contracts/verification/zksync/ZKSyncDiamond.sol:5",
        "version": {
          "withMetadata": "c3c8ab5673bc6e95e830f9233a04be8b1c6c4b2c0502f489dcfc9fc34b3217e0",
          "withoutMetadata": "c3c8ab5673bc6e95e830f9233a04be8b1c6c4b2c0502f489dcfc9fc34b3217e0",
          "linkedWithoutMetadata": "c3c8ab5673bc6e95e830f9233a04be8b1c6c4b2c0502f489dcfc9fc34b3217e0"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,bytes32)",
          "storedBatchHash(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ZKSyncDiamond",
            "src": "contracts/verification/zksync/ZKSyncDiamond.sol:10"
          },
          {
            "kind": "state-variable-immutable",
            "name": "proofManager",
            "src": "contracts/verification/zksync/ZKSyncDiamond.sol:7"
          },
          {
            "kind": "state-variable-immutable",
            "name": "chainId",
            "src": "contracts/verification/zksync/ZKSyncDiamond.sol:8"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "forge-std/console.sol:console": {
        "src": "forge-std/console.sol:4",
        "version": {
          "withMetadata": "a36e8e472af71f49c02f2d968521f0c4780aeae41cda3f90d73dbb9c12aced16",
          "withoutMetadata": "a36e8e472af71f49c02f2d968521f0c4780aeae41cda3f90d73dbb9c12aced16",
          "linkedWithoutMetadata": "a36e8e472af71f49c02f2d968521f0c4780aeae41cda3f90d73dbb9c12aced16"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts-hardhat-zksync-upgradable/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/interfaces/IERC1967.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/interfaces/draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/ERC1967/ERC1967Proxy.sol:15",
        "version": {
          "withMetadata": "724fdb1dec20a2898310992ab52c9215436f16d3039a0db34d112aae4799b7ce",
          "withoutMetadata": "724fdb1dec20a2898310992ab52c9215436f16d3039a0db34d112aae4799b7ce",
          "linkedWithoutMetadata": "724fdb1dec20a2898310992ab52c9215436f16d3039a0db34d112aae4799b7ce"
        },
        "inherit": [
          "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts-hardhat-zksync-upgradable/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/ERC1967/ERC1967Proxy.sol:22"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/ERC1967/ERC1967Upgrade.sol:18",
        "inherit": [
          "@openzeppelin/contracts-hardhat-zksync-upgradable/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/Proxy.sol:Proxy": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/beacon/BeaconProxy.sol:BeaconProxy": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/beacon/BeaconProxy.sol:18",
        "version": {
          "withMetadata": "9642ffb274b8b4c99347a2525ecf0428f9da559b908fba85fbc934965b22aee1",
          "withoutMetadata": "9642ffb274b8b4c99347a2525ecf0428f9da559b908fba85fbc934965b22aee1",
          "linkedWithoutMetadata": "9642ffb274b8b4c99347a2525ecf0428f9da559b908fba85fbc934965b22aee1"
        },
        "inherit": [
          "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts-hardhat-zksync-upgradable/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/beacon/BeaconProxy.sol:30"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/beacon/UpgradeableBeacon.sol:UpgradeableBeacon": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/beacon/UpgradeableBeacon.sol:16",
        "version": {
          "withMetadata": "c2e339a4730615873fbbe6b2af29d776a6aaf105f8d01f942b57de0d2c969b94",
          "withoutMetadata": "c2e339a4730615873fbbe6b2af29d776a6aaf105f8d01f942b57de0d2c969b94",
          "linkedWithoutMetadata": "c2e339a4730615873fbbe6b2af29d776a6aaf105f8d01f942b57de0d2c969b94"
        },
        "inherit": [
          "@openzeppelin/contracts-hardhat-zksync-upgradable/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Context.sol:Context",
          "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/beacon/IBeacon.sol:IBeacon"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "implementation()",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/beacon/UpgradeableBeacon.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/access/Ownable.sol:21"
            },
            {
              "label": "_implementation",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UpgradeableBeacon",
              "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/beacon/UpgradeableBeacon.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/transparent/ProxyAdmin.sol:ProxyAdmin": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/transparent/ProxyAdmin.sol:13",
        "version": {
          "withMetadata": "617a43a7c63c7fa9ce841a2052c26068968b93ca8233edc5a730c357c093f665",
          "withoutMetadata": "617a43a7c63c7fa9ce841a2052c26068968b93ca8233edc5a730c357c093f665",
          "linkedWithoutMetadata": "617a43a7c63c7fa9ce841a2052c26068968b93ca8233edc5a730c357c093f665"
        },
        "inherit": [
          "@openzeppelin/contracts-hardhat-zksync-upgradable/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/transparent/TransparentUpgradeableProxy.sol:ITransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/transparent/TransparentUpgradeableProxy.sol:14",
        "inherit": [
          "@openzeppelin/contracts-hardhat-zksync-upgradable/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [],
        "methods": [
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/transparent/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/transparent/TransparentUpgradeableProxy.sol:58",
        "version": {
          "withMetadata": "a6ef1b5ceba80c77330b9cd2c455ca2c3c0a1e06964b6c34d6e667d9b41fdb2e",
          "withoutMetadata": "a6ef1b5ceba80c77330b9cd2c455ca2c3c0a1e06964b6c34d6e667d9b41fdb2e",
          "linkedWithoutMetadata": "a6ef1b5ceba80c77330b9cd2c455ca2c3c0a1e06964b6c34d6e667d9b41fdb2e"
        },
        "inherit": [
          "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy",
          "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts-hardhat-zksync-upgradable/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/transparent/TransparentUpgradeableProxy.sol:63"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:9",
        "version": {
          "withMetadata": "8910918aa124c65503b7ce00258229ec34cd0542d05f2eaa5c8269a8b0ad249d",
          "withoutMetadata": "8910918aa124c65503b7ce00258229ec34cd0542d05f2eaa5c8269a8b0ad249d",
          "linkedWithoutMetadata": "8910918aa124c65503b7ce00258229ec34cd0542d05f2eaa5c8269a8b0ad249d"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/StorageSlot.sol:34",
        "version": {
          "withMetadata": "44459adc347b95b4fa27c2aed4a6e75a37db313f157dee5d9bc3224d792f7653",
          "withoutMetadata": "44459adc347b95b4fa27c2aed4a6e75a37db313f157dee5d9bc3224d792f7653",
          "linkedWithoutMetadata": "44459adc347b95b4fa27c2aed4a6e75a37db313f157dee5d9bc3224d792f7653"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/lib/JellyfishMerkleTreeVerifier.sol:JellyfishMerkleTreeVerifier": {
        "src": "contracts/lib/JellyfishMerkleTreeVerifier.sol:5",
        "version": {
          "withMetadata": "47f9383de3dd51e1a256287629d90e0ddddbf7794d2c07addc7e424f60a12b6c",
          "withoutMetadata": "47f9383de3dd51e1a256287629d90e0ddddbf7794d2c07addc7e424f60a12b6c",
          "linkedWithoutMetadata": "47f9383de3dd51e1a256287629d90e0ddddbf7794d2c07addc7e424f60a12b6c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "verifyProof(bytes32,(bytes32,bytes32),((bytes32,bytes32),bytes32[]))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts-hardhat-zksync-upgradable/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/interfaces/IERC1967.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/interfaces/draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/ERC1967/ERC1967Proxy.sol:15",
        "version": {
          "withMetadata": "724fdb1dec20a2898310992ab52c9215436f16d3039a0db34d112aae4799b7ce",
          "withoutMetadata": "724fdb1dec20a2898310992ab52c9215436f16d3039a0db34d112aae4799b7ce",
          "linkedWithoutMetadata": "724fdb1dec20a2898310992ab52c9215436f16d3039a0db34d112aae4799b7ce"
        },
        "inherit": [
          "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts-hardhat-zksync-upgradable/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/ERC1967/ERC1967Proxy.sol:22"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/ERC1967/ERC1967Upgrade.sol:18",
        "inherit": [
          "@openzeppelin/contracts-hardhat-zksync-upgradable/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/Proxy.sol:Proxy": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/beacon/BeaconProxy.sol:BeaconProxy": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/beacon/BeaconProxy.sol:18",
        "version": {
          "withMetadata": "9642ffb274b8b4c99347a2525ecf0428f9da559b908fba85fbc934965b22aee1",
          "withoutMetadata": "9642ffb274b8b4c99347a2525ecf0428f9da559b908fba85fbc934965b22aee1",
          "linkedWithoutMetadata": "9642ffb274b8b4c99347a2525ecf0428f9da559b908fba85fbc934965b22aee1"
        },
        "inherit": [
          "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts-hardhat-zksync-upgradable/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/beacon/BeaconProxy.sol:30"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/beacon/UpgradeableBeacon.sol:UpgradeableBeacon": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/beacon/UpgradeableBeacon.sol:16",
        "version": {
          "withMetadata": "c2e339a4730615873fbbe6b2af29d776a6aaf105f8d01f942b57de0d2c969b94",
          "withoutMetadata": "c2e339a4730615873fbbe6b2af29d776a6aaf105f8d01f942b57de0d2c969b94",
          "linkedWithoutMetadata": "c2e339a4730615873fbbe6b2af29d776a6aaf105f8d01f942b57de0d2c969b94"
        },
        "inherit": [
          "@openzeppelin/contracts-hardhat-zksync-upgradable/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Context.sol:Context",
          "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/beacon/IBeacon.sol:IBeacon"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "implementation()",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/beacon/UpgradeableBeacon.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/access/Ownable.sol:21"
            },
            {
              "label": "_implementation",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UpgradeableBeacon",
              "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/beacon/UpgradeableBeacon.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/transparent/ProxyAdmin.sol:ProxyAdmin": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/transparent/ProxyAdmin.sol:13",
        "version": {
          "withMetadata": "617a43a7c63c7fa9ce841a2052c26068968b93ca8233edc5a730c357c093f665",
          "withoutMetadata": "617a43a7c63c7fa9ce841a2052c26068968b93ca8233edc5a730c357c093f665",
          "linkedWithoutMetadata": "617a43a7c63c7fa9ce841a2052c26068968b93ca8233edc5a730c357c093f665"
        },
        "inherit": [
          "@openzeppelin/contracts-hardhat-zksync-upgradable/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/transparent/TransparentUpgradeableProxy.sol:ITransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/transparent/TransparentUpgradeableProxy.sol:14",
        "inherit": [
          "@openzeppelin/contracts-hardhat-zksync-upgradable/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [],
        "methods": [
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/transparent/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/transparent/TransparentUpgradeableProxy.sol:58",
        "version": {
          "withMetadata": "a6ef1b5ceba80c77330b9cd2c455ca2c3c0a1e06964b6c34d6e667d9b41fdb2e",
          "withoutMetadata": "a6ef1b5ceba80c77330b9cd2c455ca2c3c0a1e06964b6c34d6e667d9b41fdb2e",
          "linkedWithoutMetadata": "a6ef1b5ceba80c77330b9cd2c455ca2c3c0a1e06964b6c34d6e667d9b41fdb2e"
        },
        "inherit": [
          "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy",
          "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts-hardhat-zksync-upgradable/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/transparent/TransparentUpgradeableProxy.sol:63"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:9",
        "version": {
          "withMetadata": "8910918aa124c65503b7ce00258229ec34cd0542d05f2eaa5c8269a8b0ad249d",
          "withoutMetadata": "8910918aa124c65503b7ce00258229ec34cd0542d05f2eaa5c8269a8b0ad249d",
          "linkedWithoutMetadata": "8910918aa124c65503b7ce00258229ec34cd0542d05f2eaa5c8269a8b0ad249d"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/StorageSlot.sol:34",
        "version": {
          "withMetadata": "44459adc347b95b4fa27c2aed4a6e75a37db313f157dee5d9bc3224d792f7653",
          "withoutMetadata": "44459adc347b95b4fa27c2aed4a6e75a37db313f157dee5d9bc3224d792f7653",
          "linkedWithoutMetadata": "44459adc347b95b4fa27c2aed4a6e75a37db313f157dee5d9bc3224d792f7653"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/lib/JellyfishMerkleTreeVerifier.sol:JellyfishMerkleTreeVerifier": {
        "src": "contracts/lib/JellyfishMerkleTreeVerifier.sol:5",
        "version": {
          "withMetadata": "47f9383de3dd51e1a256287629d90e0ddddbf7794d2c07addc7e424f60a12b6c",
          "withoutMetadata": "47f9383de3dd51e1a256287629d90e0ddddbf7794d2c07addc7e424f60a12b6c",
          "linkedWithoutMetadata": "47f9383de3dd51e1a256287629d90e0ddddbf7794d2c07addc7e424f60a12b6c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "verifyProof(bytes32,(bytes32,bytes32),((bytes32,bytes32),bytes32[]))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts-hardhat-zksync-upgradable/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/interfaces/IERC1967.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/interfaces/draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/ERC1967/ERC1967Proxy.sol:15",
        "version": {
          "withMetadata": "724fdb1dec20a2898310992ab52c9215436f16d3039a0db34d112aae4799b7ce",
          "withoutMetadata": "724fdb1dec20a2898310992ab52c9215436f16d3039a0db34d112aae4799b7ce",
          "linkedWithoutMetadata": "724fdb1dec20a2898310992ab52c9215436f16d3039a0db34d112aae4799b7ce"
        },
        "inherit": [
          "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts-hardhat-zksync-upgradable/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/ERC1967/ERC1967Proxy.sol:22"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/ERC1967/ERC1967Upgrade.sol:18",
        "inherit": [
          "@openzeppelin/contracts-hardhat-zksync-upgradable/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/Proxy.sol:Proxy": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/beacon/BeaconProxy.sol:BeaconProxy": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/beacon/BeaconProxy.sol:18",
        "version": {
          "withMetadata": "9642ffb274b8b4c99347a2525ecf0428f9da559b908fba85fbc934965b22aee1",
          "withoutMetadata": "9642ffb274b8b4c99347a2525ecf0428f9da559b908fba85fbc934965b22aee1",
          "linkedWithoutMetadata": "9642ffb274b8b4c99347a2525ecf0428f9da559b908fba85fbc934965b22aee1"
        },
        "inherit": [
          "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts-hardhat-zksync-upgradable/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/beacon/BeaconProxy.sol:30"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/beacon/UpgradeableBeacon.sol:UpgradeableBeacon": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/beacon/UpgradeableBeacon.sol:16",
        "version": {
          "withMetadata": "c2e339a4730615873fbbe6b2af29d776a6aaf105f8d01f942b57de0d2c969b94",
          "withoutMetadata": "c2e339a4730615873fbbe6b2af29d776a6aaf105f8d01f942b57de0d2c969b94",
          "linkedWithoutMetadata": "c2e339a4730615873fbbe6b2af29d776a6aaf105f8d01f942b57de0d2c969b94"
        },
        "inherit": [
          "@openzeppelin/contracts-hardhat-zksync-upgradable/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Context.sol:Context",
          "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/beacon/IBeacon.sol:IBeacon"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "implementation()",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/beacon/UpgradeableBeacon.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/access/Ownable.sol:21"
            },
            {
              "label": "_implementation",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UpgradeableBeacon",
              "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/beacon/UpgradeableBeacon.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/transparent/ProxyAdmin.sol:ProxyAdmin": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/transparent/ProxyAdmin.sol:13",
        "version": {
          "withMetadata": "617a43a7c63c7fa9ce841a2052c26068968b93ca8233edc5a730c357c093f665",
          "withoutMetadata": "617a43a7c63c7fa9ce841a2052c26068968b93ca8233edc5a730c357c093f665",
          "linkedWithoutMetadata": "617a43a7c63c7fa9ce841a2052c26068968b93ca8233edc5a730c357c093f665"
        },
        "inherit": [
          "@openzeppelin/contracts-hardhat-zksync-upgradable/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/transparent/TransparentUpgradeableProxy.sol:ITransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/transparent/TransparentUpgradeableProxy.sol:14",
        "inherit": [
          "@openzeppelin/contracts-hardhat-zksync-upgradable/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [],
        "methods": [
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/transparent/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/transparent/TransparentUpgradeableProxy.sol:58",
        "version": {
          "withMetadata": "a6ef1b5ceba80c77330b9cd2c455ca2c3c0a1e06964b6c34d6e667d9b41fdb2e",
          "withoutMetadata": "a6ef1b5ceba80c77330b9cd2c455ca2c3c0a1e06964b6c34d6e667d9b41fdb2e",
          "linkedWithoutMetadata": "a6ef1b5ceba80c77330b9cd2c455ca2c3c0a1e06964b6c34d6e667d9b41fdb2e"
        },
        "inherit": [
          "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy",
          "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts-hardhat-zksync-upgradable/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/transparent/TransparentUpgradeableProxy.sol:63"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:9",
        "version": {
          "withMetadata": "8910918aa124c65503b7ce00258229ec34cd0542d05f2eaa5c8269a8b0ad249d",
          "withoutMetadata": "8910918aa124c65503b7ce00258229ec34cd0542d05f2eaa5c8269a8b0ad249d",
          "linkedWithoutMetadata": "8910918aa124c65503b7ce00258229ec34cd0542d05f2eaa5c8269a8b0ad249d"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/StorageSlot.sol:34",
        "version": {
          "withMetadata": "44459adc347b95b4fa27c2aed4a6e75a37db313f157dee5d9bc3224d792f7653",
          "withoutMetadata": "44459adc347b95b4fa27c2aed4a6e75a37db313f157dee5d9bc3224d792f7653",
          "linkedWithoutMetadata": "44459adc347b95b4fa27c2aed4a6e75a37db313f157dee5d9bc3224d792f7653"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/lib/JellyfishMerkleTreeVerifier.sol:JellyfishMerkleTreeVerifier": {
        "src": "contracts/lib/JellyfishMerkleTreeVerifier.sol:5",
        "version": {
          "withMetadata": "47f9383de3dd51e1a256287629d90e0ddddbf7794d2c07addc7e424f60a12b6c",
          "withoutMetadata": "47f9383de3dd51e1a256287629d90e0ddddbf7794d2c07addc7e424f60a12b6c",
          "linkedWithoutMetadata": "47f9383de3dd51e1a256287629d90e0ddddbf7794d2c07addc7e424f60a12b6c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "verifyProof(bytes32,(bytes32,bytes32),((bytes32,bytes32),bytes32[]))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts-hardhat-zksync-upgradable/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/interfaces/IERC1967.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/interfaces/draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/ERC1967/ERC1967Proxy.sol:15",
        "version": {
          "withMetadata": "724fdb1dec20a2898310992ab52c9215436f16d3039a0db34d112aae4799b7ce",
          "withoutMetadata": "724fdb1dec20a2898310992ab52c9215436f16d3039a0db34d112aae4799b7ce",
          "linkedWithoutMetadata": "724fdb1dec20a2898310992ab52c9215436f16d3039a0db34d112aae4799b7ce"
        },
        "inherit": [
          "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts-hardhat-zksync-upgradable/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/ERC1967/ERC1967Proxy.sol:22"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/ERC1967/ERC1967Upgrade.sol:18",
        "inherit": [
          "@openzeppelin/contracts-hardhat-zksync-upgradable/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/Proxy.sol:Proxy": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/beacon/BeaconProxy.sol:BeaconProxy": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/beacon/BeaconProxy.sol:18",
        "version": {
          "withMetadata": "9642ffb274b8b4c99347a2525ecf0428f9da559b908fba85fbc934965b22aee1",
          "withoutMetadata": "9642ffb274b8b4c99347a2525ecf0428f9da559b908fba85fbc934965b22aee1",
          "linkedWithoutMetadata": "9642ffb274b8b4c99347a2525ecf0428f9da559b908fba85fbc934965b22aee1"
        },
        "inherit": [
          "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts-hardhat-zksync-upgradable/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/beacon/BeaconProxy.sol:30"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/beacon/UpgradeableBeacon.sol:UpgradeableBeacon": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/beacon/UpgradeableBeacon.sol:16",
        "version": {
          "withMetadata": "c2e339a4730615873fbbe6b2af29d776a6aaf105f8d01f942b57de0d2c969b94",
          "withoutMetadata": "c2e339a4730615873fbbe6b2af29d776a6aaf105f8d01f942b57de0d2c969b94",
          "linkedWithoutMetadata": "c2e339a4730615873fbbe6b2af29d776a6aaf105f8d01f942b57de0d2c969b94"
        },
        "inherit": [
          "@openzeppelin/contracts-hardhat-zksync-upgradable/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Context.sol:Context",
          "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/beacon/IBeacon.sol:IBeacon"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "implementation()",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/beacon/UpgradeableBeacon.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/access/Ownable.sol:21"
            },
            {
              "label": "_implementation",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UpgradeableBeacon",
              "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/beacon/UpgradeableBeacon.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/transparent/ProxyAdmin.sol:ProxyAdmin": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/transparent/ProxyAdmin.sol:13",
        "version": {
          "withMetadata": "617a43a7c63c7fa9ce841a2052c26068968b93ca8233edc5a730c357c093f665",
          "withoutMetadata": "617a43a7c63c7fa9ce841a2052c26068968b93ca8233edc5a730c357c093f665",
          "linkedWithoutMetadata": "617a43a7c63c7fa9ce841a2052c26068968b93ca8233edc5a730c357c093f665"
        },
        "inherit": [
          "@openzeppelin/contracts-hardhat-zksync-upgradable/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/transparent/TransparentUpgradeableProxy.sol:ITransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/transparent/TransparentUpgradeableProxy.sol:14",
        "inherit": [
          "@openzeppelin/contracts-hardhat-zksync-upgradable/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [],
        "methods": [
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/transparent/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/transparent/TransparentUpgradeableProxy.sol:58",
        "version": {
          "withMetadata": "a6ef1b5ceba80c77330b9cd2c455ca2c3c0a1e06964b6c34d6e667d9b41fdb2e",
          "withoutMetadata": "a6ef1b5ceba80c77330b9cd2c455ca2c3c0a1e06964b6c34d6e667d9b41fdb2e",
          "linkedWithoutMetadata": "a6ef1b5ceba80c77330b9cd2c455ca2c3c0a1e06964b6c34d6e667d9b41fdb2e"
        },
        "inherit": [
          "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy",
          "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts-hardhat-zksync-upgradable/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/proxy/transparent/TransparentUpgradeableProxy.sol:63"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:9",
        "version": {
          "withMetadata": "8910918aa124c65503b7ce00258229ec34cd0542d05f2eaa5c8269a8b0ad249d",
          "withoutMetadata": "8910918aa124c65503b7ce00258229ec34cd0542d05f2eaa5c8269a8b0ad249d",
          "linkedWithoutMetadata": "8910918aa124c65503b7ce00258229ec34cd0542d05f2eaa5c8269a8b0ad249d"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts-hardhat-zksync-upgradable/utils/StorageSlot.sol:34",
        "version": {
          "withMetadata": "44459adc347b95b4fa27c2aed4a6e75a37db313f157dee5d9bc3224d792f7653",
          "withoutMetadata": "44459adc347b95b4fa27c2aed4a6e75a37db313f157dee5d9bc3224d792f7653",
          "linkedWithoutMetadata": "44459adc347b95b4fa27c2aed4a6e75a37db313f157dee5d9bc3224d792f7653"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/lib/JellyfishMerkleTreeVerifier.sol:JellyfishMerkleTreeVerifier": {
        "src": "contracts/lib/JellyfishMerkleTreeVerifier.sol:5",
        "version": {
          "withMetadata": "47f9383de3dd51e1a256287629d90e0ddddbf7794d2c07addc7e424f60a12b6c",
          "withoutMetadata": "47f9383de3dd51e1a256287629d90e0ddddbf7794d2c07addc7e424f60a12b6c",
          "linkedWithoutMetadata": "47f9383de3dd51e1a256287629d90e0ddddbf7794d2c07addc7e424f60a12b6c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "verifyProof(bytes32,(bytes32,bytes32),((bytes32,bytes32),bytes32[]))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    }
  ]
}